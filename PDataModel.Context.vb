'------------------------------------------------------------------------------
' <auto-generated>
'     This code was generated from a template.
'
'     Manual changes to this file may cause unexpected behavior in your application.
'     Manual changes to this file will be overwritten if the code is regenerated.
' </auto-generated>
'------------------------------------------------------------------------------

Imports System
Imports System.Data.Entity
Imports System.Data.Entity.Infrastructure
Imports System.Data.Entity.Core.Objects
Imports System.Linq

Partial Public Class PDataContext
    Inherits DbContext

    Public Sub New()
        MyBase.New("name=PDataContext")
    End Sub

    Protected Overrides Sub OnModelCreating(modelBuilder As DbModelBuilder)
        Throw New UnintentionalCodeFirstException()
    End Sub

    Public Overridable Property lu_Category() As DbSet(Of lu_Category)
    Public Overridable Property lu_Performer() As DbSet(Of lu_Performer)
    Public Overridable Property Scenes() As DbSet(Of Scene)
    Public Overridable Property Scene_Categories() As DbSet(Of Scene_Categories)
    Public Overridable Property Scene_Data18() As DbSet(Of Scene_Data18)
    Public Overridable Property Scene_Data18_Categories() As DbSet(Of Scene_Data18_Categories)
    Public Overridable Property Scene_Data18_Performers() As DbSet(Of Scene_Data18_Performers)
    Public Overridable Property Scene_Performers() As DbSet(Of Scene_Performers)
    Public Overridable Property Sites() As DbSet(Of Site)
    Public Overridable Property Studios() As DbSet(Of Studio)

    Public Overridable Function sec_Delete_lu_Category(id As Nullable(Of Integer)) As Integer
        Dim idParameter As ObjectParameter = If(id.HasValue, New ObjectParameter("id", id), New ObjectParameter("id", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("sec_Delete_lu_Category", idParameter)
    End Function

    Public Overridable Function sec_Delete_lu_Performer(id As Nullable(Of Integer)) As Integer
        Dim idParameter As ObjectParameter = If(id.HasValue, New ObjectParameter("id", id), New ObjectParameter("id", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("sec_Delete_lu_Performer", idParameter)
    End Function

    Public Overridable Function sec_Delete_Scene(id As Nullable(Of Integer)) As Integer
        Dim idParameter As ObjectParameter = If(id.HasValue, New ObjectParameter("id", id), New ObjectParameter("id", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("sec_Delete_Scene", idParameter)
    End Function

    Public Overridable Function sec_Delete_Scene_Categories(id As Nullable(Of Integer)) As Integer
        Dim idParameter As ObjectParameter = If(id.HasValue, New ObjectParameter("id", id), New ObjectParameter("id", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("sec_Delete_Scene_Categories", idParameter)
    End Function

    Public Overridable Function sec_Delete_Scene_Data18(id As Nullable(Of Integer)) As Integer
        Dim idParameter As ObjectParameter = If(id.HasValue, New ObjectParameter("id", id), New ObjectParameter("id", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("sec_Delete_Scene_Data18", idParameter)
    End Function

    Public Overridable Function sec_Delete_Scene_Data18_Categories(id As Nullable(Of Integer)) As Integer
        Dim idParameter As ObjectParameter = If(id.HasValue, New ObjectParameter("id", id), New ObjectParameter("id", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("sec_Delete_Scene_Data18_Categories", idParameter)
    End Function

    Public Overridable Function sec_Delete_Scene_Data18_Performers(id As Nullable(Of Integer)) As Integer
        Dim idParameter As ObjectParameter = If(id.HasValue, New ObjectParameter("id", id), New ObjectParameter("id", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("sec_Delete_Scene_Data18_Performers", idParameter)
    End Function

    Public Overridable Function sec_Delete_Scene_Performers(id As Nullable(Of Integer)) As Integer
        Dim idParameter As ObjectParameter = If(id.HasValue, New ObjectParameter("id", id), New ObjectParameter("id", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("sec_Delete_Scene_Performers", idParameter)
    End Function

    Public Overridable Function sec_Delete_Site(id As Nullable(Of Integer)) As Integer
        Dim idParameter As ObjectParameter = If(id.HasValue, New ObjectParameter("id", id), New ObjectParameter("id", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("sec_Delete_Site", idParameter)
    End Function

    Public Overridable Function sec_Delete_Studio(id As Nullable(Of Integer)) As Integer
        Dim idParameter As ObjectParameter = If(id.HasValue, New ObjectParameter("id", id), New ObjectParameter("id", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("sec_Delete_Studio", idParameter)
    End Function

    Public Overridable Function sec_Insert_lu_Category(category As String, excluded As Nullable(Of Byte), url As String, lastUpdate As Nullable(Of Date)) As Integer
        Dim categoryParameter As ObjectParameter = If(category IsNot Nothing, New ObjectParameter("category", category), New ObjectParameter("category", GetType(String)))

        Dim excludedParameter As ObjectParameter = If(excluded.HasValue, New ObjectParameter("excluded", excluded), New ObjectParameter("excluded", GetType(Byte)))

        Dim urlParameter As ObjectParameter = If(url IsNot Nothing, New ObjectParameter("url", url), New ObjectParameter("url", GetType(String)))

        Dim lastUpdateParameter As ObjectParameter = If(lastUpdate.HasValue, New ObjectParameter("lastUpdate", lastUpdate), New ObjectParameter("lastUpdate", GetType(Date)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("sec_Insert_lu_Category", categoryParameter, excludedParameter, urlParameter, lastUpdateParameter)
    End Function

    Public Overridable Function sec_Insert_lu_Performer(name As String, aliases As String, gender As String, excluded As Nullable(Of Byte), url As String, lastUpdate As Nullable(Of Date)) As Integer
        Dim nameParameter As ObjectParameter = If(name IsNot Nothing, New ObjectParameter("name", name), New ObjectParameter("name", GetType(String)))

        Dim aliasesParameter As ObjectParameter = If(aliases IsNot Nothing, New ObjectParameter("aliases", aliases), New ObjectParameter("aliases", GetType(String)))

        Dim genderParameter As ObjectParameter = If(gender IsNot Nothing, New ObjectParameter("gender", gender), New ObjectParameter("gender", GetType(String)))

        Dim excludedParameter As ObjectParameter = If(excluded.HasValue, New ObjectParameter("excluded", excluded), New ObjectParameter("excluded", GetType(Byte)))

        Dim urlParameter As ObjectParameter = If(url IsNot Nothing, New ObjectParameter("url", url), New ObjectParameter("url", GetType(String)))

        Dim lastUpdateParameter As ObjectParameter = If(lastUpdate.HasValue, New ObjectParameter("lastUpdate", lastUpdate), New ObjectParameter("lastUpdate", GetType(Date)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("sec_Insert_lu_Performer", nameParameter, aliasesParameter, genderParameter, excludedParameter, urlParameter, lastUpdateParameter)
    End Function

    Public Overridable Function sec_Insert_NewScene(siteAbbreviation As String, siteTitle As String, sceneId As Nullable(Of Integer), sceneTitle As String, releaseDate As Nullable(Of Date), url As String, description As String, likes As Nullable(Of Integer), dislikes As Nullable(Of Integer), views As Nullable(Of Integer), rating As Nullable(Of Decimal), studio As String, performers As String, categories As String) As Integer
        Dim siteAbbreviationParameter As ObjectParameter = If(siteAbbreviation IsNot Nothing, New ObjectParameter("siteAbbreviation", siteAbbreviation), New ObjectParameter("siteAbbreviation", GetType(String)))

        Dim siteTitleParameter As ObjectParameter = If(siteTitle IsNot Nothing, New ObjectParameter("siteTitle", siteTitle), New ObjectParameter("siteTitle", GetType(String)))

        Dim sceneIdParameter As ObjectParameter = If(sceneId.HasValue, New ObjectParameter("sceneId", sceneId), New ObjectParameter("sceneId", GetType(Integer)))

        Dim sceneTitleParameter As ObjectParameter = If(sceneTitle IsNot Nothing, New ObjectParameter("sceneTitle", sceneTitle), New ObjectParameter("sceneTitle", GetType(String)))

        Dim releaseDateParameter As ObjectParameter = If(releaseDate.HasValue, New ObjectParameter("releaseDate", releaseDate), New ObjectParameter("releaseDate", GetType(Date)))

        Dim urlParameter As ObjectParameter = If(url IsNot Nothing, New ObjectParameter("url", url), New ObjectParameter("url", GetType(String)))

        Dim descriptionParameter As ObjectParameter = If(description IsNot Nothing, New ObjectParameter("description", description), New ObjectParameter("description", GetType(String)))

        Dim likesParameter As ObjectParameter = If(likes.HasValue, New ObjectParameter("likes", likes), New ObjectParameter("likes", GetType(Integer)))

        Dim dislikesParameter As ObjectParameter = If(dislikes.HasValue, New ObjectParameter("dislikes", dislikes), New ObjectParameter("dislikes", GetType(Integer)))

        Dim viewsParameter As ObjectParameter = If(views.HasValue, New ObjectParameter("views", views), New ObjectParameter("views", GetType(Integer)))

        Dim ratingParameter As ObjectParameter = If(rating.HasValue, New ObjectParameter("rating", rating), New ObjectParameter("rating", GetType(Decimal)))

        Dim studioParameter As ObjectParameter = If(studio IsNot Nothing, New ObjectParameter("studio", studio), New ObjectParameter("studio", GetType(String)))

        Dim performersParameter As ObjectParameter = If(performers IsNot Nothing, New ObjectParameter("performers", performers), New ObjectParameter("performers", GetType(String)))

        Dim categoriesParameter As ObjectParameter = If(categories IsNot Nothing, New ObjectParameter("categories", categories), New ObjectParameter("categories", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("sec_Insert_NewScene", siteAbbreviationParameter, siteTitleParameter, sceneIdParameter, sceneTitleParameter, releaseDateParameter, urlParameter, descriptionParameter, likesParameter, dislikesParameter, viewsParameter, ratingParameter, studioParameter, performersParameter, categoriesParameter)
    End Function

    Public Overridable Function sec_Insert_NewScene_Data18(siteAbbreviation As String, siteTitle As String, data18Id As Nullable(Of Integer), sceneTitle As String, releaseDate As Nullable(Of Date), url As String, story As String, studio As String, performers As String, categories As String) As Integer
        Dim siteAbbreviationParameter As ObjectParameter = If(siteAbbreviation IsNot Nothing, New ObjectParameter("siteAbbreviation", siteAbbreviation), New ObjectParameter("siteAbbreviation", GetType(String)))

        Dim siteTitleParameter As ObjectParameter = If(siteTitle IsNot Nothing, New ObjectParameter("siteTitle", siteTitle), New ObjectParameter("siteTitle", GetType(String)))

        Dim data18IdParameter As ObjectParameter = If(data18Id.HasValue, New ObjectParameter("data18Id", data18Id), New ObjectParameter("data18Id", GetType(Integer)))

        Dim sceneTitleParameter As ObjectParameter = If(sceneTitle IsNot Nothing, New ObjectParameter("sceneTitle", sceneTitle), New ObjectParameter("sceneTitle", GetType(String)))

        Dim releaseDateParameter As ObjectParameter = If(releaseDate.HasValue, New ObjectParameter("releaseDate", releaseDate), New ObjectParameter("releaseDate", GetType(Date)))

        Dim urlParameter As ObjectParameter = If(url IsNot Nothing, New ObjectParameter("url", url), New ObjectParameter("url", GetType(String)))

        Dim storyParameter As ObjectParameter = If(story IsNot Nothing, New ObjectParameter("story", story), New ObjectParameter("story", GetType(String)))

        Dim studioParameter As ObjectParameter = If(studio IsNot Nothing, New ObjectParameter("studio", studio), New ObjectParameter("studio", GetType(String)))

        Dim performersParameter As ObjectParameter = If(performers IsNot Nothing, New ObjectParameter("performers", performers), New ObjectParameter("performers", GetType(String)))

        Dim categoriesParameter As ObjectParameter = If(categories IsNot Nothing, New ObjectParameter("categories", categories), New ObjectParameter("categories", GetType(String)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("sec_Insert_NewScene_Data18", siteAbbreviationParameter, siteTitleParameter, data18IdParameter, sceneTitleParameter, releaseDateParameter, urlParameter, storyParameter, studioParameter, performersParameter, categoriesParameter)
    End Function

    Public Overridable Function sec_Insert_Scene(siteId As Nullable(Of Integer), sceneId As Nullable(Of Integer), title As String, releaseDate As Nullable(Of Date), url As String, description As String, likes As Nullable(Of Integer), dislikes As Nullable(Of Integer), views As Nullable(Of Integer), rating As Nullable(Of Decimal), lastUpdate As Nullable(Of Date)) As Integer
        Dim siteIdParameter As ObjectParameter = If(siteId.HasValue, New ObjectParameter("siteId", siteId), New ObjectParameter("siteId", GetType(Integer)))

        Dim sceneIdParameter As ObjectParameter = If(sceneId.HasValue, New ObjectParameter("sceneId", sceneId), New ObjectParameter("sceneId", GetType(Integer)))

        Dim titleParameter As ObjectParameter = If(title IsNot Nothing, New ObjectParameter("title", title), New ObjectParameter("title", GetType(String)))

        Dim releaseDateParameter As ObjectParameter = If(releaseDate.HasValue, New ObjectParameter("releaseDate", releaseDate), New ObjectParameter("releaseDate", GetType(Date)))

        Dim urlParameter As ObjectParameter = If(url IsNot Nothing, New ObjectParameter("url", url), New ObjectParameter("url", GetType(String)))

        Dim descriptionParameter As ObjectParameter = If(description IsNot Nothing, New ObjectParameter("description", description), New ObjectParameter("description", GetType(String)))

        Dim likesParameter As ObjectParameter = If(likes.HasValue, New ObjectParameter("likes", likes), New ObjectParameter("likes", GetType(Integer)))

        Dim dislikesParameter As ObjectParameter = If(dislikes.HasValue, New ObjectParameter("dislikes", dislikes), New ObjectParameter("dislikes", GetType(Integer)))

        Dim viewsParameter As ObjectParameter = If(views.HasValue, New ObjectParameter("views", views), New ObjectParameter("views", GetType(Integer)))

        Dim ratingParameter As ObjectParameter = If(rating.HasValue, New ObjectParameter("rating", rating), New ObjectParameter("rating", GetType(Decimal)))

        Dim lastUpdateParameter As ObjectParameter = If(lastUpdate.HasValue, New ObjectParameter("lastUpdate", lastUpdate), New ObjectParameter("lastUpdate", GetType(Date)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("sec_Insert_Scene", siteIdParameter, sceneIdParameter, titleParameter, releaseDateParameter, urlParameter, descriptionParameter, likesParameter, dislikesParameter, viewsParameter, ratingParameter, lastUpdateParameter)
    End Function

    Public Overridable Function sec_Insert_Scene_Categories(sceneId As Nullable(Of Integer), categoryId As Nullable(Of Integer), lastUpdate As Nullable(Of Date)) As Integer
        Dim sceneIdParameter As ObjectParameter = If(sceneId.HasValue, New ObjectParameter("sceneId", sceneId), New ObjectParameter("sceneId", GetType(Integer)))

        Dim categoryIdParameter As ObjectParameter = If(categoryId.HasValue, New ObjectParameter("categoryId", categoryId), New ObjectParameter("categoryId", GetType(Integer)))

        Dim lastUpdateParameter As ObjectParameter = If(lastUpdate.HasValue, New ObjectParameter("lastUpdate", lastUpdate), New ObjectParameter("lastUpdate", GetType(Date)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("sec_Insert_Scene_Categories", sceneIdParameter, categoryIdParameter, lastUpdateParameter)
    End Function

    Public Overridable Function sec_Insert_Scene_Data18(siteId As Nullable(Of Integer), data18Id As Nullable(Of Integer), title As String, releaseDate As Nullable(Of Date), url As String, story As String, lastUpdate As Nullable(Of Date)) As Integer
        Dim siteIdParameter As ObjectParameter = If(siteId.HasValue, New ObjectParameter("siteId", siteId), New ObjectParameter("siteId", GetType(Integer)))

        Dim data18IdParameter As ObjectParameter = If(data18Id.HasValue, New ObjectParameter("data18Id", data18Id), New ObjectParameter("data18Id", GetType(Integer)))

        Dim titleParameter As ObjectParameter = If(title IsNot Nothing, New ObjectParameter("title", title), New ObjectParameter("title", GetType(String)))

        Dim releaseDateParameter As ObjectParameter = If(releaseDate.HasValue, New ObjectParameter("releaseDate", releaseDate), New ObjectParameter("releaseDate", GetType(Date)))

        Dim urlParameter As ObjectParameter = If(url IsNot Nothing, New ObjectParameter("url", url), New ObjectParameter("url", GetType(String)))

        Dim storyParameter As ObjectParameter = If(story IsNot Nothing, New ObjectParameter("story", story), New ObjectParameter("story", GetType(String)))

        Dim lastUpdateParameter As ObjectParameter = If(lastUpdate.HasValue, New ObjectParameter("lastUpdate", lastUpdate), New ObjectParameter("lastUpdate", GetType(Date)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("sec_Insert_Scene_Data18", siteIdParameter, data18IdParameter, titleParameter, releaseDateParameter, urlParameter, storyParameter, lastUpdateParameter)
    End Function

    Public Overridable Function sec_Insert_Scene_Data18_Categories(sceneId As Nullable(Of Integer), categoryId As Nullable(Of Integer), lastUpdate As Nullable(Of Date)) As Integer
        Dim sceneIdParameter As ObjectParameter = If(sceneId.HasValue, New ObjectParameter("sceneId", sceneId), New ObjectParameter("sceneId", GetType(Integer)))

        Dim categoryIdParameter As ObjectParameter = If(categoryId.HasValue, New ObjectParameter("categoryId", categoryId), New ObjectParameter("categoryId", GetType(Integer)))

        Dim lastUpdateParameter As ObjectParameter = If(lastUpdate.HasValue, New ObjectParameter("lastUpdate", lastUpdate), New ObjectParameter("lastUpdate", GetType(Date)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("sec_Insert_Scene_Data18_Categories", sceneIdParameter, categoryIdParameter, lastUpdateParameter)
    End Function

    Public Overridable Function sec_Insert_Scene_Data18_Performers(sceneId As Nullable(Of Integer), performerId As Nullable(Of Integer), lastUpdate As Nullable(Of Date)) As Integer
        Dim sceneIdParameter As ObjectParameter = If(sceneId.HasValue, New ObjectParameter("sceneId", sceneId), New ObjectParameter("sceneId", GetType(Integer)))

        Dim performerIdParameter As ObjectParameter = If(performerId.HasValue, New ObjectParameter("performerId", performerId), New ObjectParameter("performerId", GetType(Integer)))

        Dim lastUpdateParameter As ObjectParameter = If(lastUpdate.HasValue, New ObjectParameter("lastUpdate", lastUpdate), New ObjectParameter("lastUpdate", GetType(Date)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("sec_Insert_Scene_Data18_Performers", sceneIdParameter, performerIdParameter, lastUpdateParameter)
    End Function

    Public Overridable Function sec_Insert_Scene_Performers(sceneId As Nullable(Of Integer), performerId As Nullable(Of Integer), lastUpdate As Nullable(Of Date)) As Integer
        Dim sceneIdParameter As ObjectParameter = If(sceneId.HasValue, New ObjectParameter("sceneId", sceneId), New ObjectParameter("sceneId", GetType(Integer)))

        Dim performerIdParameter As ObjectParameter = If(performerId.HasValue, New ObjectParameter("performerId", performerId), New ObjectParameter("performerId", GetType(Integer)))

        Dim lastUpdateParameter As ObjectParameter = If(lastUpdate.HasValue, New ObjectParameter("lastUpdate", lastUpdate), New ObjectParameter("lastUpdate", GetType(Date)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("sec_Insert_Scene_Performers", sceneIdParameter, performerIdParameter, lastUpdateParameter)
    End Function

    Public Overridable Function sec_Insert_Site(studioId As Nullable(Of Integer), name As String, abbreviation As String, url As String, lastUpdate As Nullable(Of Date)) As Integer
        Dim studioIdParameter As ObjectParameter = If(studioId.HasValue, New ObjectParameter("studioId", studioId), New ObjectParameter("studioId", GetType(Integer)))

        Dim nameParameter As ObjectParameter = If(name IsNot Nothing, New ObjectParameter("name", name), New ObjectParameter("name", GetType(String)))

        Dim abbreviationParameter As ObjectParameter = If(abbreviation IsNot Nothing, New ObjectParameter("abbreviation", abbreviation), New ObjectParameter("abbreviation", GetType(String)))

        Dim urlParameter As ObjectParameter = If(url IsNot Nothing, New ObjectParameter("url", url), New ObjectParameter("url", GetType(String)))

        Dim lastUpdateParameter As ObjectParameter = If(lastUpdate.HasValue, New ObjectParameter("lastUpdate", lastUpdate), New ObjectParameter("lastUpdate", GetType(Date)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("sec_Insert_Site", studioIdParameter, nameParameter, abbreviationParameter, urlParameter, lastUpdateParameter)
    End Function

    Public Overridable Function sec_Insert_Studio(name As String, url As String, lastUpdate As Nullable(Of Date)) As Integer
        Dim nameParameter As ObjectParameter = If(name IsNot Nothing, New ObjectParameter("name", name), New ObjectParameter("name", GetType(String)))

        Dim urlParameter As ObjectParameter = If(url IsNot Nothing, New ObjectParameter("url", url), New ObjectParameter("url", GetType(String)))

        Dim lastUpdateParameter As ObjectParameter = If(lastUpdate.HasValue, New ObjectParameter("lastUpdate", lastUpdate), New ObjectParameter("lastUpdate", GetType(Date)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("sec_Insert_Studio", nameParameter, urlParameter, lastUpdateParameter)
    End Function

    Public Overridable Function sec_Select_lu_Category(id As Nullable(Of Integer)) As ObjectResult(Of sec_Select_lu_Category_Result)
        Dim idParameter As ObjectParameter = If(id.HasValue, New ObjectParameter("id", id), New ObjectParameter("id", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of sec_Select_lu_Category_Result)("sec_Select_lu_Category", idParameter)
    End Function

    Public Overridable Function sec_Select_lu_Performer(id As Nullable(Of Integer)) As ObjectResult(Of sec_Select_lu_Performer_Result)
        Dim idParameter As ObjectParameter = If(id.HasValue, New ObjectParameter("id", id), New ObjectParameter("id", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of sec_Select_lu_Performer_Result)("sec_Select_lu_Performer", idParameter)
    End Function

    Public Overridable Function sec_Select_Scene(id As Nullable(Of Integer)) As Integer
        Dim idParameter As ObjectParameter = If(id.HasValue, New ObjectParameter("id", id), New ObjectParameter("id", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("sec_Select_Scene", idParameter)
    End Function

    Public Overridable Function sec_Select_Scene_Categories(id As Nullable(Of Integer)) As ObjectResult(Of sec_Select_Scene_Categories_Result)
        Dim idParameter As ObjectParameter = If(id.HasValue, New ObjectParameter("id", id), New ObjectParameter("id", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of sec_Select_Scene_Categories_Result)("sec_Select_Scene_Categories", idParameter)
    End Function

    Public Overridable Function sec_Select_Scene_Data18(id As Nullable(Of Integer)) As ObjectResult(Of sec_Select_Scene_Data18_Result)
        Dim idParameter As ObjectParameter = If(id.HasValue, New ObjectParameter("id", id), New ObjectParameter("id", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of sec_Select_Scene_Data18_Result)("sec_Select_Scene_Data18", idParameter)
    End Function

    Public Overridable Function sec_Select_Scene_Data18_Categories(id As Nullable(Of Integer)) As ObjectResult(Of sec_Select_Scene_Data18_Categories_Result)
        Dim idParameter As ObjectParameter = If(id.HasValue, New ObjectParameter("id", id), New ObjectParameter("id", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of sec_Select_Scene_Data18_Categories_Result)("sec_Select_Scene_Data18_Categories", idParameter)
    End Function

    Public Overridable Function sec_Select_Scene_Data18_Performers(id As Nullable(Of Integer)) As ObjectResult(Of sec_Select_Scene_Data18_Performers_Result)
        Dim idParameter As ObjectParameter = If(id.HasValue, New ObjectParameter("id", id), New ObjectParameter("id", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of sec_Select_Scene_Data18_Performers_Result)("sec_Select_Scene_Data18_Performers", idParameter)
    End Function

    Public Overridable Function sec_Select_Scene_Performers(id As Nullable(Of Integer)) As ObjectResult(Of sec_Select_Scene_Performers_Result)
        Dim idParameter As ObjectParameter = If(id.HasValue, New ObjectParameter("id", id), New ObjectParameter("id", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of sec_Select_Scene_Performers_Result)("sec_Select_Scene_Performers", idParameter)
    End Function

    Public Overridable Function sec_Select_Site(id As Nullable(Of Integer)) As ObjectResult(Of sec_Select_Site_Result)
        Dim idParameter As ObjectParameter = If(id.HasValue, New ObjectParameter("id", id), New ObjectParameter("id", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of sec_Select_Site_Result)("sec_Select_Site", idParameter)
    End Function

    Public Overridable Function sec_Select_Studio(id As Nullable(Of Integer)) As ObjectResult(Of sec_Select_Studio_Result)
        Dim idParameter As ObjectParameter = If(id.HasValue, New ObjectParameter("id", id), New ObjectParameter("id", GetType(Integer)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of sec_Select_Studio_Result)("sec_Select_Studio", idParameter)
    End Function

    Public Overridable Function sec_Update_lu_Category(id As Nullable(Of Integer), category As String, excluded As Nullable(Of Byte), url As String, lastUpdate As Nullable(Of Date)) As ObjectResult(Of sec_Update_lu_Category_Result)
        Dim idParameter As ObjectParameter = If(id.HasValue, New ObjectParameter("id", id), New ObjectParameter("id", GetType(Integer)))

        Dim categoryParameter As ObjectParameter = If(category IsNot Nothing, New ObjectParameter("category", category), New ObjectParameter("category", GetType(String)))

        Dim excludedParameter As ObjectParameter = If(excluded.HasValue, New ObjectParameter("excluded", excluded), New ObjectParameter("excluded", GetType(Byte)))

        Dim urlParameter As ObjectParameter = If(url IsNot Nothing, New ObjectParameter("url", url), New ObjectParameter("url", GetType(String)))

        Dim lastUpdateParameter As ObjectParameter = If(lastUpdate.HasValue, New ObjectParameter("lastUpdate", lastUpdate), New ObjectParameter("lastUpdate", GetType(Date)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of sec_Update_lu_Category_Result)("sec_Update_lu_Category", idParameter, categoryParameter, excludedParameter, urlParameter, lastUpdateParameter)
    End Function

    Public Overridable Function sec_Update_lu_Performer(id As Nullable(Of Integer), name As String, aliases As String, gender As String, excluded As Nullable(Of Byte), url As String, lastUpdate As Nullable(Of Date)) As ObjectResult(Of sec_Update_lu_Performer_Result)
        Dim idParameter As ObjectParameter = If(id.HasValue, New ObjectParameter("id", id), New ObjectParameter("id", GetType(Integer)))

        Dim nameParameter As ObjectParameter = If(name IsNot Nothing, New ObjectParameter("name", name), New ObjectParameter("name", GetType(String)))

        Dim aliasesParameter As ObjectParameter = If(aliases IsNot Nothing, New ObjectParameter("aliases", aliases), New ObjectParameter("aliases", GetType(String)))

        Dim genderParameter As ObjectParameter = If(gender IsNot Nothing, New ObjectParameter("gender", gender), New ObjectParameter("gender", GetType(String)))

        Dim excludedParameter As ObjectParameter = If(excluded.HasValue, New ObjectParameter("excluded", excluded), New ObjectParameter("excluded", GetType(Byte)))

        Dim urlParameter As ObjectParameter = If(url IsNot Nothing, New ObjectParameter("url", url), New ObjectParameter("url", GetType(String)))

        Dim lastUpdateParameter As ObjectParameter = If(lastUpdate.HasValue, New ObjectParameter("lastUpdate", lastUpdate), New ObjectParameter("lastUpdate", GetType(Date)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of sec_Update_lu_Performer_Result)("sec_Update_lu_Performer", idParameter, nameParameter, aliasesParameter, genderParameter, excludedParameter, urlParameter, lastUpdateParameter)
    End Function

    Public Overridable Function sec_Update_Scene(id As Nullable(Of Integer), siteId As Nullable(Of Integer), data18Id As Nullable(Of Integer), title As String, releaseDate As Nullable(Of Date), url As String, description As String, likes As Nullable(Of Integer), dislikes As Nullable(Of Integer), views As Nullable(Of Integer), rating As Nullable(Of Decimal), lastUpdate As Nullable(Of Date)) As Integer
        Dim idParameter As ObjectParameter = If(id.HasValue, New ObjectParameter("id", id), New ObjectParameter("id", GetType(Integer)))

        Dim siteIdParameter As ObjectParameter = If(siteId.HasValue, New ObjectParameter("siteId", siteId), New ObjectParameter("siteId", GetType(Integer)))

        Dim data18IdParameter As ObjectParameter = If(data18Id.HasValue, New ObjectParameter("data18Id", data18Id), New ObjectParameter("data18Id", GetType(Integer)))

        Dim titleParameter As ObjectParameter = If(title IsNot Nothing, New ObjectParameter("title", title), New ObjectParameter("title", GetType(String)))

        Dim releaseDateParameter As ObjectParameter = If(releaseDate.HasValue, New ObjectParameter("releaseDate", releaseDate), New ObjectParameter("releaseDate", GetType(Date)))

        Dim urlParameter As ObjectParameter = If(url IsNot Nothing, New ObjectParameter("url", url), New ObjectParameter("url", GetType(String)))

        Dim descriptionParameter As ObjectParameter = If(description IsNot Nothing, New ObjectParameter("description", description), New ObjectParameter("description", GetType(String)))

        Dim likesParameter As ObjectParameter = If(likes.HasValue, New ObjectParameter("likes", likes), New ObjectParameter("likes", GetType(Integer)))

        Dim dislikesParameter As ObjectParameter = If(dislikes.HasValue, New ObjectParameter("dislikes", dislikes), New ObjectParameter("dislikes", GetType(Integer)))

        Dim viewsParameter As ObjectParameter = If(views.HasValue, New ObjectParameter("views", views), New ObjectParameter("views", GetType(Integer)))

        Dim ratingParameter As ObjectParameter = If(rating.HasValue, New ObjectParameter("rating", rating), New ObjectParameter("rating", GetType(Decimal)))

        Dim lastUpdateParameter As ObjectParameter = If(lastUpdate.HasValue, New ObjectParameter("lastUpdate", lastUpdate), New ObjectParameter("lastUpdate", GetType(Date)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction("sec_Update_Scene", idParameter, siteIdParameter, data18IdParameter, titleParameter, releaseDateParameter, urlParameter, descriptionParameter, likesParameter, dislikesParameter, viewsParameter, ratingParameter, lastUpdateParameter)
    End Function

    Public Overridable Function sec_Update_Scene_Categories(id As Nullable(Of Integer), sceneId As Nullable(Of Integer), categoryId As Nullable(Of Integer), lastUpdate As Nullable(Of Date)) As ObjectResult(Of sec_Update_Scene_Categories_Result)
        Dim idParameter As ObjectParameter = If(id.HasValue, New ObjectParameter("id", id), New ObjectParameter("id", GetType(Integer)))

        Dim sceneIdParameter As ObjectParameter = If(sceneId.HasValue, New ObjectParameter("sceneId", sceneId), New ObjectParameter("sceneId", GetType(Integer)))

        Dim categoryIdParameter As ObjectParameter = If(categoryId.HasValue, New ObjectParameter("categoryId", categoryId), New ObjectParameter("categoryId", GetType(Integer)))

        Dim lastUpdateParameter As ObjectParameter = If(lastUpdate.HasValue, New ObjectParameter("lastUpdate", lastUpdate), New ObjectParameter("lastUpdate", GetType(Date)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of sec_Update_Scene_Categories_Result)("sec_Update_Scene_Categories", idParameter, sceneIdParameter, categoryIdParameter, lastUpdateParameter)
    End Function

    Public Overridable Function sec_Update_Scene_Data18(id As Nullable(Of Integer), siteId As Nullable(Of Integer), data18Id As Nullable(Of Integer), title As String, releaseDate As Nullable(Of Date), url As String, story As String, lastUpdate As Nullable(Of Date)) As ObjectResult(Of sec_Update_Scene_Data18_Result)
        Dim idParameter As ObjectParameter = If(id.HasValue, New ObjectParameter("id", id), New ObjectParameter("id", GetType(Integer)))

        Dim siteIdParameter As ObjectParameter = If(siteId.HasValue, New ObjectParameter("siteId", siteId), New ObjectParameter("siteId", GetType(Integer)))

        Dim data18IdParameter As ObjectParameter = If(data18Id.HasValue, New ObjectParameter("data18Id", data18Id), New ObjectParameter("data18Id", GetType(Integer)))

        Dim titleParameter As ObjectParameter = If(title IsNot Nothing, New ObjectParameter("title", title), New ObjectParameter("title", GetType(String)))

        Dim releaseDateParameter As ObjectParameter = If(releaseDate.HasValue, New ObjectParameter("releaseDate", releaseDate), New ObjectParameter("releaseDate", GetType(Date)))

        Dim urlParameter As ObjectParameter = If(url IsNot Nothing, New ObjectParameter("url", url), New ObjectParameter("url", GetType(String)))

        Dim storyParameter As ObjectParameter = If(story IsNot Nothing, New ObjectParameter("story", story), New ObjectParameter("story", GetType(String)))

        Dim lastUpdateParameter As ObjectParameter = If(lastUpdate.HasValue, New ObjectParameter("lastUpdate", lastUpdate), New ObjectParameter("lastUpdate", GetType(Date)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of sec_Update_Scene_Data18_Result)("sec_Update_Scene_Data18", idParameter, siteIdParameter, data18IdParameter, titleParameter, releaseDateParameter, urlParameter, storyParameter, lastUpdateParameter)
    End Function

    Public Overridable Function sec_Update_Scene_Data18_Categories(id As Nullable(Of Integer), sceneId As Nullable(Of Integer), categoryId As Nullable(Of Integer), lastUpdate As Nullable(Of Date)) As ObjectResult(Of sec_Update_Scene_Data18_Categories_Result)
        Dim idParameter As ObjectParameter = If(id.HasValue, New ObjectParameter("id", id), New ObjectParameter("id", GetType(Integer)))

        Dim sceneIdParameter As ObjectParameter = If(sceneId.HasValue, New ObjectParameter("sceneId", sceneId), New ObjectParameter("sceneId", GetType(Integer)))

        Dim categoryIdParameter As ObjectParameter = If(categoryId.HasValue, New ObjectParameter("categoryId", categoryId), New ObjectParameter("categoryId", GetType(Integer)))

        Dim lastUpdateParameter As ObjectParameter = If(lastUpdate.HasValue, New ObjectParameter("lastUpdate", lastUpdate), New ObjectParameter("lastUpdate", GetType(Date)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of sec_Update_Scene_Data18_Categories_Result)("sec_Update_Scene_Data18_Categories", idParameter, sceneIdParameter, categoryIdParameter, lastUpdateParameter)
    End Function

    Public Overridable Function sec_Update_Scene_Data18_Performers(id As Nullable(Of Integer), sceneId As Nullable(Of Integer), performerId As Nullable(Of Integer), lastUpdate As Nullable(Of Date)) As ObjectResult(Of sec_Update_Scene_Data18_Performers_Result)
        Dim idParameter As ObjectParameter = If(id.HasValue, New ObjectParameter("id", id), New ObjectParameter("id", GetType(Integer)))

        Dim sceneIdParameter As ObjectParameter = If(sceneId.HasValue, New ObjectParameter("sceneId", sceneId), New ObjectParameter("sceneId", GetType(Integer)))

        Dim performerIdParameter As ObjectParameter = If(performerId.HasValue, New ObjectParameter("performerId", performerId), New ObjectParameter("performerId", GetType(Integer)))

        Dim lastUpdateParameter As ObjectParameter = If(lastUpdate.HasValue, New ObjectParameter("lastUpdate", lastUpdate), New ObjectParameter("lastUpdate", GetType(Date)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of sec_Update_Scene_Data18_Performers_Result)("sec_Update_Scene_Data18_Performers", idParameter, sceneIdParameter, performerIdParameter, lastUpdateParameter)
    End Function

    Public Overridable Function sec_Update_Scene_Performers(id As Nullable(Of Integer), sceneId As Nullable(Of Integer), performerId As Nullable(Of Integer), lastUpdate As Nullable(Of Date)) As ObjectResult(Of sec_Update_Scene_Performers_Result)
        Dim idParameter As ObjectParameter = If(id.HasValue, New ObjectParameter("id", id), New ObjectParameter("id", GetType(Integer)))

        Dim sceneIdParameter As ObjectParameter = If(sceneId.HasValue, New ObjectParameter("sceneId", sceneId), New ObjectParameter("sceneId", GetType(Integer)))

        Dim performerIdParameter As ObjectParameter = If(performerId.HasValue, New ObjectParameter("performerId", performerId), New ObjectParameter("performerId", GetType(Integer)))

        Dim lastUpdateParameter As ObjectParameter = If(lastUpdate.HasValue, New ObjectParameter("lastUpdate", lastUpdate), New ObjectParameter("lastUpdate", GetType(Date)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of sec_Update_Scene_Performers_Result)("sec_Update_Scene_Performers", idParameter, sceneIdParameter, performerIdParameter, lastUpdateParameter)
    End Function

    Public Overridable Function sec_Update_Site(id As Nullable(Of Integer), studioId As Nullable(Of Integer), name As String, abbreviation As String, url As String, lastUpdate As Nullable(Of Date)) As ObjectResult(Of sec_Update_Site_Result)
        Dim idParameter As ObjectParameter = If(id.HasValue, New ObjectParameter("id", id), New ObjectParameter("id", GetType(Integer)))

        Dim studioIdParameter As ObjectParameter = If(studioId.HasValue, New ObjectParameter("studioId", studioId), New ObjectParameter("studioId", GetType(Integer)))

        Dim nameParameter As ObjectParameter = If(name IsNot Nothing, New ObjectParameter("name", name), New ObjectParameter("name", GetType(String)))

        Dim abbreviationParameter As ObjectParameter = If(abbreviation IsNot Nothing, New ObjectParameter("abbreviation", abbreviation), New ObjectParameter("abbreviation", GetType(String)))

        Dim urlParameter As ObjectParameter = If(url IsNot Nothing, New ObjectParameter("url", url), New ObjectParameter("url", GetType(String)))

        Dim lastUpdateParameter As ObjectParameter = If(lastUpdate.HasValue, New ObjectParameter("lastUpdate", lastUpdate), New ObjectParameter("lastUpdate", GetType(Date)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of sec_Update_Site_Result)("sec_Update_Site", idParameter, studioIdParameter, nameParameter, abbreviationParameter, urlParameter, lastUpdateParameter)
    End Function

    Public Overridable Function sec_Update_Studio(id As Nullable(Of Integer), name As String, url As String, lastUpdate As Nullable(Of Date)) As ObjectResult(Of sec_Update_Studio_Result)
        Dim idParameter As ObjectParameter = If(id.HasValue, New ObjectParameter("id", id), New ObjectParameter("id", GetType(Integer)))

        Dim nameParameter As ObjectParameter = If(name IsNot Nothing, New ObjectParameter("name", name), New ObjectParameter("name", GetType(String)))

        Dim urlParameter As ObjectParameter = If(url IsNot Nothing, New ObjectParameter("url", url), New ObjectParameter("url", GetType(String)))

        Dim lastUpdateParameter As ObjectParameter = If(lastUpdate.HasValue, New ObjectParameter("lastUpdate", lastUpdate), New ObjectParameter("lastUpdate", GetType(Date)))

        Return DirectCast(Me, IObjectContextAdapter).ObjectContext.ExecuteFunction(Of sec_Update_Studio_Result)("sec_Update_Studio", idParameter, nameParameter, urlParameter, lastUpdateParameter)
    End Function

End Class
